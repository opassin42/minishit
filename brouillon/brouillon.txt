
void	*first_token(t_list **single_tok)
{
	char	*s;
	t_list	*tmp;

	s = (char*)(*single_tok)->val;
	tmp = *single_tok;
	if (!tmp)
		return (NULL);
	tmp = tmp->next;
	while (tmp)
	{
		if ((*single_tok)->type == tmp->type)
			s = ft_strjoin(s, tmp->val);
		else
			break;
		tmp = tmp->next;
	}
	if ((*single_tok)->next)
		*single_tok = (*single_tok)->next;
	return ((void*)s);
}

void	*make_token_word(t_list **single_tok)
{
	char	*s;
	t_list	*tmp;
	t_list	*current;
	t_list	*token;

	s = (char*)first_token(single_tok);
	if (!s)
		return (NULL);
	token = ft_lstnew((void*)s);	
	*single_tok = (*single_tok)->next;
	current = *single_tok;
	if (!current)
		return ((void*)token);
	while (current)
	{
		if (!current->next || current->type != current->next->type)
			ft_lstadd_back(&token, ft_lstnew(current->val));
		else
		{
			tmp = current;
			s = current->val;
			while (tmp && tmp->next && tmp->type == tmp->next->type)
			{
				s = ft_strjoin(s, tmp->next->val);
				tmp = tmp->next;
			}
			current = tmp;
			ft_lstadd_back(&token, ft_lstnew((void*)s));
		}
		current = current->next;
	}
	return ((void*)token);
}